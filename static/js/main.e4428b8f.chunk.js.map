{"version":3,"sources":["components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Error/Error.module.css","App.module.css","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Spinner/Spinner.js","components/Error/Error.js","components/Modal/Modal.js","services/images-api.js","App.js","index.js","components/Searchbar/Serchbar.module.css"],"names":["module","exports","Searchbar","state","inputValue","handleSubmitForm","e","onSubmit","props","preventDefault","setState","handleChangeInput","currentTarget","value","this","className","styles","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ptopTypes","PropTypes","func","isRequired","ImageGalleryItem","imagesArr","onImageClick","map","id","webformatURL","largeImageURL","imageName","pageURL","replace","onClick","key","ImageGalleryItemImage","src","alt","ImageGallery","Button","override","css","Spinner","isLoading","size","color","loading","Error","text","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","children","createPortal","Overlay","axios","defaults","baseURL","searchQuery","currentPage","perPage","get","then","response","data","hits","App","error","largeImageLink","noResults","componentDidUpdate","prevProps","prevState","a","fetchImages","length","onSubmitSearch","onClickLoadMore","scrollTo","top","documentElement","scrollHeight","behavior","onCloseModal","options","imagesApi","catch","finally","shouldRenderloadMoreBtn","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e4428b8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__eIPjM\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1BK0A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3KOoV\",\"Modal\":\"Modal_Modal__2gqy6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3K7PX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1SaVj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"Error_Error__KppfV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2a3OQ\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Serchbar.module.css';\n\nclass Searchbar extends Component {\n  state = {\n    inputValue: '',\n  };\n\n  handleSubmitForm = e => {\n    const { onSubmit } = this.props;\n    const { inputValue } = this.state;\n\n    e.preventDefault();\n    onSubmit(inputValue);\n    this.setState({ inputValue: '' });\n  };\n\n  handleChangeInput = ({ currentTarget }) => {\n    this.setState({ inputValue: currentTarget.value });\n  };\n\n  render() {\n    const { inputValue } = this.state;\n\n    return (\n      <header className={styles.Searchbar}>\n        <form className={styles.SearchForm} onSubmit={this.handleSubmitForm}>\n          <button type=\"submit\" className={styles.SearchFormButton}>\n            <span className={styles.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={styles.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={inputValue}\n            onChange={this.handleChangeInput}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.ptopTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ imagesArr, onImageClick }) =>\n  imagesArr.map(({ id, webformatURL, largeImageURL, pageURL }) => {\n    const imageName = pageURL.replace('https://pixabay.com/photos/', '');\n\n    return (\n      <li\n        onClick={() => {\n          onImageClick(largeImageURL, imageName);\n        }}\n        className={styles.ImageGalleryItem}\n        key={id}\n      >\n        <img\n          className={styles.ImageGalleryItemImage}\n          src={webformatURL}\n          alt={imageName}\n        />\n      </li>\n    );\n  });\n\nImageGalleryItem.propTypes = {\n  imagesArr: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      pageURL: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport styles from './ImageGallery.module.css';\n\nconst ImageGallery = ({ imagesArr, onImageClick }) => (\n  <ul className={styles.ImageGallery}>\n    <ImageGalleryItem imagesArr={imagesArr} onImageClick={onImageClick} />\n  </ul>\n);\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nconst Button = ({ onClick }) => (\n  <button className={styles.Button} type=\"button\" onClick={onClick}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ScaleLoader from 'react-spinners/ScaleLoader';\nimport { css } from '@emotion/core';\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nconst Spinner = ({ isLoading }) => (\n  <ScaleLoader css={override} size={20} color={'#3f51b5'} loading={isLoading} />\n);\n\nSpinner.propTypes = { isLoading: PropTypes.bool.isRequired };\n\nexport default Spinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Error.module.css';\n\nconst Error = ({ text }) => <h2 className={styles.Error}>{text}</h2>;\n\nError.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Error;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = ({ code }) => {\n    const { onClose } = this.props;\n\n    code === 'Escape' && onClose();\n  };\n\n  handleBackdropClick = ({ target, currentTarget }) => {\n    const { onClose } = this.props;\n\n    target === currentTarget && onClose();\n  };\n\n  render() {\n    const { children } = this.props;\n\n    return createPortal(\n      <div className={styles.Overlay} onClick={this.handleBackdropClick}>\n        <div className={styles.Modal}>{children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Modal;\n","import axios from 'axios';\n\nconst key = '16252810-97a93e8d6856e870fd6ba2eb3';\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nconst fetchImages = ({ searchQuery = '', currentPage = 1, perPage = 12 }) => {\n  return axios\n    .get(\n      `?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${currentPage}&per_page=${perPage}&key=${key}`,\n    )\n    .then(response => response.data.hits);\n};\n\nexport default { fetchImages };\n","import React, { Component } from 'react';\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Spinner from './components/Spinner';\nimport Error from './components/Error';\nimport Modal from './components/Modal';\n\nimport imagesApi from './services/images-api';\n\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    imagesArr: [],\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n    error: null,\n    largeImageLink: '',\n    imageName: '',\n    noResults: false,\n  };\n\n  componentDidUpdate = async (prevProps, prevState) => {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      await this.fetchImages();\n      if (this.state.imagesArr.length === 0) {\n        this.setState({ noResults: true });\n      }\n    }\n  };\n\n  onSubmitSearch = searchQuery => {\n    if (searchQuery !== this.state.searchQuery) {\n      this.setState({\n        searchQuery,\n        currentPage: 1,\n        imagesArr: [],\n        error: null,\n        noResults: false,\n      });\n    }\n  };\n\n  onClickLoadMore = async () => {\n    await this.fetchImages();\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  onImageClick = (largeImageLink, imageName) => {\n    this.setState({\n      largeImageLink,\n      imageName,\n    });\n  };\n\n  onCloseModal = () => {\n    this.setState({\n      largeImageLink: null,\n    });\n  };\n\n  fetchImages = async () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = { currentPage, searchQuery };\n\n    this.setState({ isLoading: true, error: null });\n\n    await imagesApi\n      .fetchImages(options)\n      .then(hits => {\n        this.setState(prevState => ({\n          imagesArr: [...prevState.imagesArr, ...hits],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  render() {\n    const {\n      imagesArr,\n      isLoading,\n      error,\n      largeImageLink,\n      imageName,\n      noResults,\n      searchQuery,\n    } = this.state;\n    const shouldRenderloadMoreBtn = imagesArr.length > 0 && !isLoading;\n\n    return (\n      <div className={styles.App}>\n        {largeImageLink && (\n          <Modal onClose={this.onCloseModal}>\n            <img src={largeImageLink} alt={imageName} />\n          </Modal>\n        )}\n        <Searchbar onSubmit={this.onSubmitSearch} />\n        {noResults && (\n          <Error text={`Your search ${searchQuery} did not match any image.`} />\n        )}\n        <ImageGallery imagesArr={imagesArr} onImageClick={this.onImageClick} />\n        <Spinner isLoading={isLoading} />\n        {error && <Error text=\"Something went wrong. Please try again.\" />}\n        {shouldRenderloadMoreBtn && <Button onClick={this.onClickLoadMore} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Serchbar_Searchbar__1Oobe\",\"SearchForm\":\"Serchbar_SearchForm__2v4JZ\",\"SearchFormButton\":\"Serchbar_SearchFormButton__kVrXT\",\"SearchFormButtonLabel\":\"Serchbar_SearchFormButtonLabel__9R4tg\",\"SearchFormInput\":\"Serchbar_SearchFormInput__392gc\"};"],"sourceRoot":""}